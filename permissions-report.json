{
  "permissions": {
    "byModule": {
      "app": [
        "chart.js"
      ],
      "components": [
        "manage:users",
        "edit:pharmacy",
        "lg",
        "mx-auto"
      ],
      "features": [
        "auth:login",
        "auth:logout",
        "auth:register",
        "auth:manage-account",
        "auth:verify-email",
        "auth:reset-password",
        "auth:view-profile",
        "auth:edit-profile",
        "auth:manage-sessions",
        "auth:view-sessions",
        "auth:manage-users",
        "auth:view-users",
        "auth:edit-users",
        "auth:delete-users",
        "auth:impersonate-user",
        "development",
        "Failed to refresh user profile",
        "/api/auth/verify-access",
        "POST",
        "Content-Type",
        "application/json",
        "/unauthorized",
        "exams:view",
        "md:hidden",
        "exams:take",
        "exams:create",
        "exams:edit",
        "exams:delete",
        "exams:duplicate",
        "exams:manage-questions",
        "exams:publish",
        "exams:unpublish",
        "exams:assign",
        "exams:grade",
        "exams:view-results",
        "exams:export-results",
        "exams:view-analytics",
        "Error verifying access:",
        "Error verifying permissions:",
        "admin",
        "Failed to check access"
      ],
      "hooks": [],
      "lib": [],
      "shared": [],
      "utils": []
    },
    "all": [
      "chart.js",
      "manage:users",
      "edit:pharmacy",
      "lg",
      "mx-auto",
      "auth:login",
      "auth:logout",
      "auth:register",
      "auth:manage-account",
      "auth:verify-email",
      "auth:reset-password",
      "auth:view-profile",
      "auth:edit-profile",
      "auth:manage-sessions",
      "auth:view-sessions",
      "auth:manage-users",
      "auth:view-users",
      "auth:edit-users",
      "auth:delete-users",
      "auth:impersonate-user",
      "development",
      "Failed to refresh user profile",
      "/api/auth/verify-access",
      "POST",
      "Content-Type",
      "application/json",
      "/unauthorized",
      "exams:view",
      "md:hidden",
      "exams:take",
      "exams:create",
      "exams:edit",
      "exams:delete",
      "exams:duplicate",
      "exams:manage-questions",
      "exams:publish",
      "exams:unpublish",
      "exams:assign",
      "exams:grade",
      "exams:view-results",
      "exams:export-results",
      "exams:view-analytics",
      "Error verifying access:",
      "Error verifying permissions:",
      "admin",
      "Failed to check access"
    ]
  },
  "roles": {
    "defined": [
      "development",
      "Failed to refresh user profile",
      "ADMIN",
      "SUPER_ADMIN",
      "USER",
      "GUEST",
      "PHARMACIST",
      "PHARMACY_MANAGER",
      "PROPRIETOR",
      "SALESMAN",
      "STUDENT",
      "INSTRUCTOR",
      "TECHNICIAN",
      "METADATA",
      "HIERARCHY",
      "PERMISSIONS",
      "userRole",
      "user",
      "admin",
      "useRole must be used within a RoleProvider"
    ],
    "withPermissions": {}
  },
  "permissionUsage": {
    "inGuards": {},
    "inHooks": {},
    "inCalls": {
      "manage_inventory": [
        "\\app\\(dashboard)\\dashboard\\page.tsx"
      ],
      "ADMIN": [
        "\\features\\shell\\components\\sidebar\\AppSidebar.tsx"
      ]
    }
  },
  "files": {
    "definitions": [
      "\\components\\auth\\PermissionGuard.tsx",
      "\\features\\auth\\constants\\permissions\\index.ts",
      "\\features\\auth\\core\\AuthContext.tsx",
      "\\features\\auth\\hooks\\useAuth.ts",
      "\\features\\auth\\hooks\\useAuthWithQuery.ts",
      "\\features\\auth\\ui\\protection\\RequireAuth.tsx",
      "\\features\\exams\\constants\\permissions\\index.ts",
      "\\features\\rbac\\constants\\permissions.ts",
      "\\features\\rbac\\constants\\roles.ts",
      "\\features\\rbac\\contexts\\FeatureContext.tsx",
      "\\features\\rbac\\hooks\\useAccess.ts",
      "\\features\\rbac\\hooks\\useFeatureAccess.ts",
      "\\features\\rbac\\hooks\\usePermissions.ts",
      "\\features\\rbac\\registry\\rbacRegistry.ts",
      "\\features\\rbac\\ui\\FeatureGuard.tsx",
      "\\features\\rbac\\ui\\PermissionCheck.tsx",
      "\\features\\rbac\\ui\\PermissionGuard.tsx",
      "\\features\\shell\\components\\layout\\AppLayout.tsx",
      "\\features\\shell\\components\\sidebar\\useRole.tsx",
      "\\features\\shell\\Hooks\\useRole.tsx"
    ],
    "usage": [
      "\\app\\(dashboard)\\dashboard\\page.tsx",
      "\\components\\auth\\PermissionGuard.tsx",
      "\\features\\auth\\core\\AuthContext.tsx",
      "\\features\\auth\\hooks\\useAuthWithQuery.ts",
      "\\features\\exams\\components\\admin\\ExamDashboard.tsx",
      "\\features\\exams\\components\\admin\\ExamQuestions.tsx",
      "\\features\\exams\\components\\admin\\ExamsList.tsx",
      "\\features\\exams\\components\\admin\\JsonExamUploader.tsx",
      "\\features\\exams\\hooks\\useExamPermissions.ts",
      "\\features\\rbac\\api\\hooks\\useRbacQueries.ts",
      "\\features\\rbac\\hooks\\useAccess.ts",
      "\\features\\rbac\\hooks\\usePermissions.ts",
      "\\features\\rbac\\ui\\FeatureGuard.tsx",
      "\\features\\rbac\\ui\\PermissionCheck.tsx",
      "\\features\\shell\\components\\sidebar\\AppSidebar.tsx"
    ]
  },
  "metadata": {
    "scannedFiles": 332,
    "scannedDirs": 219,
    "scanTime": 678
  }
}